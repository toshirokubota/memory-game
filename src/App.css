/* media query break points */
body {
  margin: 0;
  padding: 0;
}

#root {
  width: 100%;
}

.start-game-card input[type=radio] {
  display: none;
}
.start-game-card label {
  background-color: var(--color-slate-400);
  padding: 0.25rem 1rem;
  border-radius: 1rem;
  color: white;
  text-align: center;
}
.start-game-card input[type=radio]:checked + label {
  background-color: var(--color-slate-800);
}

header .pop-up-menu {
  display: box;
}
header .static-menu {
  display: none;
}
@media (min-width: 700px) {
  header .pop-up-menu {
    display: none;
  }
  header .static-menu {
    display: block;
  }
}

.tile.closed {
  background-color: var(--color-slate-700);
}
.tile.closed span, .tile.closed i {
  opacity: 0;
}
.tile.closed:hover, .tile.closed:focus {
  background-color: var(--color-sky-700);
  cursor: pointer;
}
.tile.opened {
  background-color: var(--color-slate-400);
}
.tile.opened span, .tile.opened i {
  opacity: 1;
}
.tile.mismatched {
  background-color: var(--color-red-700);
}
.tile.mismatched span, .tile.mismatched i {
  opacity: 1;
}
.tile.matched {
  background-color: var(--color-orange-300);
}
.tile.matched span, .tile.matched i {
  opacity: 1;
}

.game-board {
  display: grid;
  gap: 1rem;
}

.gameModal {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-color: transparent;
  color: black;
  font-size: 2rem;
}

.overlay {
  position: fixed;
  top: 0rem;
  left: 0rem;
  right: 0rem;
  bottom: 0rem;
  background-color: rgba(50, 50, 50, 0.5);
}

.score-box {
  position: relative;
}

.score-box.current::before {
  content: "";
  position: absolute;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid var(--color-orange-500);
}

footer .score-box {
  flex-direction: column;
  align-items: center;
}
footer .score-box-player {
  color: var(--color-slate-700);
}
footer .score-box-score {
  color: var(--color-slate-900);
}
footer .score-box.current {
  background-color: var(--color-orange-500);
}
footer .score-box.current > span {
  color: white;
}
footer .score-box-player::before {
  content: "P";
}
footer .score-box-note {
  display: none;
}
footer .solo-metric {
  flex-direction: column;
}

@media (min-width: 700px) {
  footer .score-box {
    align-items: start;
  }
  footer .score-box-player::before {
    content: "Player ";
  }
  footer .solo-metric {
    flex-direction: row;
    justify-content: space-between;
  }
}
@media (min-width: 1000px) {
  footer .score-box {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
  }
  footer .score-box-note {
    display: block;
    opacity: 0;
  }
  footer .score-box-note.current {
    opacity: 1;
  }
}
.grid.grid-cols-3 {
  grid-template-columns: repeat(3, 1fr);
}

.end-card .end-card-buttons {
  flex-direction: column;
}
.end-card .end-card-buttons button {
  width: 100%;
}

@media (min-width: 700px) {
  .end-card .end-card-buttons {
    flex-direction: row;
  }
}
.start-game-card, .end-card {
  width: clamp(300px, 80vw, 500px);
}

.memory-game {
  width: clamp(300px, 80vw, 600px);
}

.game-board {
  width: clamp(280px, 60vw, 500px);
  margin-inline: auto;
}

.start-game-card, .end-card, .memory-game, .play-on-message {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

input[type=radio] + label:hover, input[type=radio] + label:focus {
  background-color: var(--color-sky-700);
}

form button:hover, form button:focus {
  background-color: var(--color-orange-300);
}/*# sourceMappingURL=App.css.map */